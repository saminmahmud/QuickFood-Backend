openapi: 3.0.3
info:
  title: QuickFood API
  version: 1.0.0
  description: The Online Food Delivery System allows users to browse restaurants,
    view menus, place orders, and track their delivery status. Restaurant owners can
    manage their menus and view orders.
paths:
  /auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /order/:
    get:
      operationId: order_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: order_create
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /order/{id}/:
    get:
      operationId: order_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: order_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: order_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: order_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /order/admin/{id}/:
    get:
      operationId: order_admin_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: order_admin_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /order/order-items/:
    get:
      operationId: order_order_items_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
    post:
      operationId: order_order_items_create
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /order/order-items/{id}/:
    get:
      operationId: order_order_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: order_order_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    patch:
      operationId: order_order_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    delete:
      operationId: order_order_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - order
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /restaurant/:
    get:
      operationId: restaurant_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - restaurant
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
          description: ''
    post:
      operationId: restaurant_create
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
  /restaurant/{id}/:
    get:
      operationId: restaurant_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - restaurant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    put:
      operationId: restaurant_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    patch:
      operationId: restaurant_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    delete:
      operationId: restaurant_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - restaurant
      responses:
        '204':
          description: No response body
  /restaurant/menu/:
    get:
      operationId: restaurant_menu_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - restaurant
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
          description: ''
    post:
      operationId: restaurant_menu_create
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
  /restaurant/menu/{id}/:
    get:
      operationId: restaurant_menu_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - restaurant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    put:
      operationId: restaurant_menu_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    patch:
      operationId: restaurant_menu_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    delete:
      operationId: restaurant_menu_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - restaurant
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      responses:
        '200':
          description: No response body
  /users/logout/:
    post:
      operationId: users_logout_create
      tags:
      - users
      responses:
        '200':
          description: No response body
  /users/signup/:
    post:
      operationId: users_signup_create
      tags:
      - users
      responses:
        '200':
          description: No response body
components:
  schemas:
    MenuItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        image:
          type: string
          format: uri
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        restaurant:
          type: integer
      required:
      - description
      - id
      - name
      - price
      - restaurant
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 13
        address:
          type: string
          maxLength: 250
        postal_code:
          type: string
          maxLength: 20
        city:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        tran_id:
          type: string
          nullable: true
          maxLength: 100
        total_price:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_paid:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
      required:
      - address
      - city
      - created_at
      - email
      - first_name
      - id
      - items
      - last_name
      - phone
      - postal_code
      - total_price
      - user
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        order:
          type: integer
        menu_item:
          type: integer
        restaurant:
          type: integer
      required:
      - id
      - menu_item
      - order
      - price
      - quantity
      - restaurant
    PatchedMenuItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        image:
          type: string
          format: uri
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        restaurant:
          type: integer
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 13
        address:
          type: string
          maxLength: 250
        postal_code:
          type: string
          maxLength: 20
        city:
          type: string
          maxLength: 100
        status:
          $ref: '#/components/schemas/StatusEnum'
        tran_id:
          type: string
          nullable: true
          maxLength: 100
        total_price:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_paid:
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
    PatchedOrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        order:
          type: integer
        menu_item:
          type: integer
        restaurant:
          type: integer
    PatchedRestaurant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        name:
          type: string
          maxLength: 255
        description:
          type: string
        location:
          type: string
          maxLength: 255
        owner:
          type: integer
        menus:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
          readOnly: true
    Restaurant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        name:
          type: string
          maxLength: 255
        description:
          type: string
        location:
          type: string
          maxLength: 255
        owner:
          type: integer
        menus:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
          readOnly: true
      required:
      - description
      - id
      - location
      - menus
      - name
      - owner
    StatusEnum:
      enum:
      - Preparing
      - Out for Delivery
      - Delivered
      type: string
      description: |-
        * `Preparing` - Preparing
        * `Out for Delivery` - Out for Delivery
        * `Delivered` - Delivered
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_restaurant_owner:
          type: boolean
      required:
      - email
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
